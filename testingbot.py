import re
import requests

API_KEY = "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"

# === 1. –û—Ä—ñ—î–Ω—Ç–æ–≤–Ω—ñ —Ü—ñ–Ω–∏ –Ω–∞ –±/–≤ –∫–æ–º–ø–ª–µ–∫—Ç—É—é—á—ñ
price_list = {
    "GTX 970": 1500,
    "GTX 1050 TI": 2000,
    "i5-7500": 1200,
    "GTX 960": 1000,
    "RX 470": 1442,
    "GTX 1660": 4000,
    "RX 580": 2830,
    "i5-8600": 1700,
    "GTX 750 TI": 1200,
    "GT 1030": 1000,
    "i3-6100": 300,
    "i3-7100": 739,
    "i3-9100": 850,
    "RX 570": 1801,
    "i7-3770": 1512,
    "Pentium": 100,
    "GTX 1060": 2400,
    "i5-9400": 2000,
    "i5-8400": 1800,
    "i5-6500": 1000,
    "GTX 650": 838,
    "i5-10400": 3000,
    "GTX 1650": 3500,
    "Ryzen": 1000,
    "i7-9700": 2500,
    "GTX 750": 1000,
    "i5-7400": 1290,
    "i7-8700": 2000,
    "i3-10100": 2469,
    "GTX 760": 1408,
    "i7-6700": 2581,
    "GTX 950": 800,
    "Ryzen 3 1200": 400,
    "Ryzen 3 1300": 500,
    "Ryzen 3 2200": 600,
    "Ryzen 3 3100": 700,
    "Ryzen 3 3300": 1000,
    "Ryzen 3 4300": 900,
    "Ryzen 5 1400": 900,
    "Ryzen 5 1500": 1000,
    "Ryzen 5 1600": 1100,
    "Ryzen 5 2400": 1200,
    "Ryzen 5 2600": 1500,
    "Ryzen 5 3500": 1900,
    "Ryzen 5 3600": 2000,
    "Ryzen 5 4500": 1600,
    "Ryzen 7 1700": 1800,
    "Ryzen 7 1800": 2100,
    "Ryzen 7 2700": 2200,
    "Ryzen 7 2800": 2300,
    "Ryzen 7 3700": 2400,
    "Ryzen 7 4700": 2500,
    "Ryzen 5 5600": 2400,
    "Ryzen 5 5700": 2500,
    "Ryzen 7 5700": 4000,
    "Ryzen 7 7700": 4000,
    "Ryzen 7 7800": 5000,
    "Ryzen 7 5800": 4000,
    "GTX 560": 500,
    "i5-6400": 933,
    "GTX 660": 800,
    "i5-6600": 1000,
    "i7-7700": 2000,
    "i7-2600": 1000,
    "FX": 1447,
    "Phenom": 642,
    "i5-4460": 654,
    "i5-2400": 575,
    "i5-3470": 584,
    "i5-4570": 646,
    "i5-3570": 637,
    "athlon": 0,
    "i5-4670": 696,
    "i7-10700": 5000,
    "GTX 1070": 2621,
    "GTX 980": 2559,
    "GTX 670": 1494,
    "i9-10900": 0,
    "Ryzen 5 5500": 2000,
    "None": 0,
    "–ú–∞—Ç–µ—Ä–∏–Ω—Å—å–∫–∞ –ø–ª–∞—Ç–∞ AM4": 2500,
    "–ú–∞—Ç–µ—Ä–∏–Ω—Å—å–∫–∞ –ø–ª–∞—Ç–∞ INTEL": 1500,
    "16 GB RAM": 1000,
    "512 GB SSD": 1500

}

# === 2. –û–ø–∏—Å –ü–ö –∑ OLX
pc_description = """
–ü–†–û–î–ê–Ñ–¢–¨–°–Ø –¢–Ü–õ–¨–ö–ò –°–ò–°–¢–ï–ú–ù–ò–ô –ë–õ–û–ö!!! (14500–≥—Ä–Ω.)
–º–æ–Ω—ñ—Ç–æ—Ä –º–æ–∂—É –ø—Ä–æ–¥–∞—Ç–∏ –∑–∞ –¥–æ–¥–∞—Ç–∫–æ–≤—É –ø–ª–∞—Ç—É (Samsung B2230N —Å—Ç–∞—Ä–∏–π, –∞–ª–µ –≤ —ñ–¥–µ–∞–ª—å–Ω–æ–º—É —Å—Ç–∞–Ω—ñ –∑–∞ 2000–≥—Ä–Ω)
–±–µ–∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏
WiFi –ø—Ä–∏–π–º–∞—á –≤ –ø–æ–¥–∞—Ä—É–Ω–æ–∫ (USB)

- –ö–æ—Ä–ø—É—Å: Vinga Tank (–ø—Ä–æ–∑–æ—Ä–∞ —Å—Ç—ñ–Ω–∫–∞, –ø—Ä–æ—Ä–µ–∑–∏–Ω–µ–Ω—ñ –∫—Ä—ñ–ø–ª–µ–Ω–Ω—è, –∫–Ω–æ–ø–∫–∞ –ø—É—Å–∫ —Ç–∞ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–æ—Ä—Ç–∏ –∑–≤–µ—Ä—Ö—É)
- –ú–∞—Ç–µ—Ä–∏–Ω—Å—å–∫–∞ –ø–ª–∞—Ç–∞: ASUS Prime B450
- –ü—Ä–æ—Ü–µ—Å–æ—Ä: Ryzen 5 1600AF (–æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –∫—É–ª–µ—Ä —ñ–∑ –∫–æ—Ä–æ–±–∫–∏)
- –û–ó–£: 2x8GB 2666Hz
- –í—ñ–¥–µ–æ–∫–∞—Ä—Ç–∞: Gigabyte GTX 1050Ti 4GB
- –ù–∞–∫–æ–ø–∏—á—É–≤–∞—á 1: HDD 1TB
- –ù–∞–∫–æ–ø–∏—á—É–≤–∞—á 2: SSD 240GB
- –ë–ª–æ–∫ –∂–∏–≤–ª–µ–Ω–Ω—è: Chieftec A-90 650W GOLD (!)

–ö–æ–º–ø —Å–∏–Ω–∞, —Å—Ç–∞–≤ —Å—Ç—É–¥–µ–Ω—Ç–æ–º –∫—É–ø–∏–ª–∏ –π–æ–º—É –Ω–æ—É—Ç–±—É–∫, –∞ —Ü–µ–π —Å—Ç–æ—ó—Ç—å –±–µ–∑ –¥—ñ–ª–∞.
–ù–∞–∫–æ–ø–∏—á—É–≤–∞—á –±–µ–∑ –±–∏—Ç–∏—Ö —Å–µ–∫—Ç–æ—Ä—ñ–≤
–ë–ª–æ–∫ –∂–∏–≤–ª–µ–Ω–Ω—è –ø–æ—Ç—è–≥–Ω–µ –±—É–¥—å —è–∫–∏–π –∞–ø–≥—Ä–µ–¥, –±–æ –≥–æ–ª–¥–æ–≤–∏–π —ñ –º–∞—î –≤–µ–ª–∏–∫–∏–π –∑–∞–ø–∞—Å
–í—ñ–¥–µ–æ–∫–∞—Ä—Ç–∞ –±–µ–∑ –≤–∞–¥, –≤—Å–µ —â–æ –º–∞–ª–∞ —Ç—è–≥–Ω—É–ª–∞, –∂–æ–¥–Ω–æ–≥–æ –∑—Ä–∏–≤—É –Ω–µ –±—É–ª–æ.
–†—ñ–≤–µ–Ω—å —à—É–º—É —Å–µ—Ä–µ–¥–Ω—ñ–π, —Ü–µ –Ω–µ –Ω–æ—É—Ç, –±–µ–∑—à—É–º–Ω–æ—Å—Ç—ñ –Ω–µ –±—É–¥–µ.
–ñ–æ–¥–Ω–∞ –¥–µ—Ç–∞–ª—å –Ω–µ —Ä–µ–º–æ–Ω—Ç—É–≤–∞–ª–∞—Å—å —ñ –Ω–µ –ø–æ—Ç—Ä–µ–±—É—î –≤—Ç—Ä—É—á–∞–Ω—å, –≤—Å–µ –ø—Ä–∞—Ü—é—î
"""

olx_price = 16000

# === 3. –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –ø–æ—à—É–∫ –∑–≥–∞–¥–æ–∫ —ñ —Å–∫–ª–∞–¥–∞–Ω–Ω—è —Å—É–º–∏
total_price = 0
used_parts = []

for part, price in price_list.items():
    if re.search(part, pc_description, re.IGNORECASE):
        total_price += price
        used_parts.append(f"{part} ‚Äî {price} –≥—Ä–Ω")

# === 4. –§–æ—Ä–º—É—î–º–æ –∑–∞–ø–∏—Ç –¥–æ –®–Ü
system_prompt = "–¢–∏ –∫–æ–º–ø'—é—Ç–µ—Ä–Ω–∏–π –µ–∫—Å–ø–µ—Ä—Ç. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –¥—ñ–∑–Ω–∞—Ç–∏—Å—å —è–∫—ñ –∫–æ–º–ø–ª–µ–∫—Ç—É—é—á—ñ –≤ —Ü—å–æ–º—É –∫–æ–º–ø'—é—Ç–µ—Ä—ñ "
user_prompt = f"""\
–û–ø–∏—Å:
{pc_description}

–í–∫–∞–∂–∏ —Ç—ñ–ª—å–∫–∏ —Å–ø–∏—Å–æ–∫ —É—Å—ñ—Ö –≤–∞–∂–ª–∏–≤–∏—Ö —Ç–∞ –æ—Å–Ω–æ–≤–Ω–∏—Ö –∫–æ–º–ø–ª–µ–∫—Ç—É—é—á–∏—Ö —è–∫—ñ —Ç—É—Ç —î —Ç–∞–∫–∏—Ö —è–∫ (–≤—ñ–¥–µ–æ–∫–∞—Ä—Ç–∞, –ø—Ä–æ—Ü–µ—Å–æ—Ä, –±–ª–æ–∫ –∂–∏–≤–ª–µ–Ω–Ω—è, –º–∞—Ç–µ—Ä–∏–Ω—Å—å–∫–∞ –ø–ª–∞—Ç–∞, –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞ –ø–∞–º'—è—Ç—å, –¥–∏—Å–∫–∏), —è–∫—â–æ —è–∫–æ–≥–æ—Å—å –Ω–µ–º–∞—î —Ç–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞ –π–æ–≥–æ –º—ñ—Å—Ü—ñ –Ω–∞–ø–∏—à–∏ None —Ç–∞ –Ω–µ –ø–∏—à–∏ –Ω—ñ—á–æ–≥–æ —ñ–Ω—à–æ–≥–æ.
"""

# === 5. –ù–∞–¥—Å–∏–ª–∞—î–º–æ –≤ OpenRouter
def ask_ai(prompt):
    url = "https://openrouter.ai/api/v1/chat/completions"
    headers = {
        "Authorization": f"Bearer {API_KEY}",
        "Content-Type": "application/json"
    }
    data = {
        "model": "mistralai/mistral-7b-instruct:free",
        "messages": [
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": prompt}
        ]
    }
    response = requests.post(url, headers=headers, json=data)
    return response.json()["choices"][0]["message"]["content"]

# === 6. –û—Ç—Ä–∏–º—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
response = ask_ai(user_prompt)
print("üîé –í—ñ–¥–ø–æ–≤—ñ–¥—å –®–Ü:\n")
print(response)
